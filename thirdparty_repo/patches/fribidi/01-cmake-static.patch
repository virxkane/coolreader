diff -urBbN fribidi-1.0.10-orig/CMakeLists.txt fribidi-1.0.10/CMakeLists.txt
--- fribidi-1.0.10-orig/CMakeLists.txt	1970-01-01 04:00:00.000000000 +0400
+++ fribidi-1.0.10/CMakeLists.txt	2021-01-25 01:19:06.207188026 +0400
@@ -0,0 +1,93 @@
+project(fribidi C)
+
+cmake_minimum_required(VERSION 3.4)
+
+set(FRIBIDI_MAJOR_VERSION 1)
+set(FRIBIDI_MINOR_VERSION 0)
+set(FRIBIDI_MICRO_VERSION 10)
+
+set(FRIBIDI_VERSION "${FRIBIDI_MAJOR_VERSION}.${FRIBIDI_MINOR_VERSION}.${FRIBIDI_MICRO_VERSION}")
+
+set(FRIBIDI_INTERFACE_VERSION 4)
+set(FRIBIDI_INTERFACE_AGE 0)
+set(FRIBIDI_BINARY_AGE 4)
+
+set(PACKAGE_BUGREPORT "https://github.com/fribidi/fribidi/issues/new")
+set(PACKAGE_NAME "GNU FriBidi")
+set(PACKAGE_VERSION "${FRIBIDI_VERSION}")
+set(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")
+set(PACKAGE_TARNAME "${CMAKE_PROJECT_NAME}")
+set(PACKAGE_URL "http://fribidi.org/")
+
+if (MSVC)
+	set(FRIBIDI_BUILT_WITH_MSVC ON)
+endif (MSVC)
+
+include (CheckTypeSize)
+include (CheckIncludeFile)
+include (CheckFunctionExists)
+
+
+# AC_HEADER_STDC
+CHECK_INCLUDE_FILE(inttypes.h HAVE_INTTYPES_H)
+CHECK_INCLUDE_FILE(memory.h HAVE_MEMORY_H)
+CHECK_INCLUDE_FILE(stdint.h HAVE_STDINT_H)
+CHECK_INCLUDE_FILE(sys/stat.h HAVE_SYS_STAT_H)
+CHECK_INCLUDE_FILE(unistd.h HAVE_UNISTD_H)
+CHECK_INCLUDE_FILE(wchar.h HAVE_WCHAR_H)
+
+CHECK_INCLUDE_FILE(stdlib.h HAVE_STDLIB_H)
+CHECK_INCLUDE_FILE(string.h HAVE_STRING_H)
+CHECK_INCLUDE_FILE(strings.h HAVE_STRINGS_H)
+CHECK_INCLUDE_FILE(asm/page.h HAVE_ASM_PAGE_H)
+CHECK_INCLUDE_FILE(sys/times.h HAVE_SYS_TIMES_H)
+
+CHECK_TYPE_SIZE(int SIZEOF_INT)
+CHECK_TYPE_SIZE(short SIZEOF_SHORT)
+CHECK_TYPE_SIZE(void* SIZEOF_VOID_P)
+CHECK_TYPE_SIZE(wchar_t SIZEOF_WCHAR_T)
+
+check_function_exists(memmove HAVE_MEMMOVE)
+check_function_exists(memset HAVE_MEMSET)
+check_function_exists(strdup HAVE_STRDUP)
+
+set(HAVE_STRINGIZE 1)
+
+option(NO_DEPRECATED "do not build deprecated functionality" ON)
+
+if (NO_DEPRECATED)
+	set (FRIBIDI_NO_DEPRECATED ON)
+endif (NO_DEPRECATED)
+
+configure_file (config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config.h)
+configure_file (fribidi-config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/fribidi-config.h)
+
+set(CMAKE_INCLUDE_CURRENT_DIR ON)
+
+include_directories(lib)
+add_definitions(-DHAVE_CONFIG_H=1)
+# define FRIBIDI_LIB_STATIC for static lib mode
+add_definitions(-DFRIBIDI_LIB_STATIC)
+
+set(FRIBIDI_SOURCE
+	lib/fribidi.c
+	lib/fribidi-arabic.c
+	lib/fribidi-bidi.c
+	lib/fribidi-bidi-types.c
+	lib/fribidi-char-sets.c
+	lib/fribidi-char-sets-cap-rtl.c
+	lib/fribidi-char-sets-cp1255.c
+	lib/fribidi-char-sets-cp1256.c
+	lib/fribidi-char-sets-iso8859-6.c
+	lib/fribidi-char-sets-iso8859-8.c
+	lib/fribidi-char-sets-utf8.c
+	lib/fribidi-deprecated.c
+	lib/fribidi-joining.c
+	lib/fribidi-joining-types.c
+	lib/fribidi-mirroring.c
+	lib/fribidi-brackets.c
+	lib/fribidi-run.c
+	lib/fribidi-shape.c
+)
+
+add_library(fribidi STATIC ${FRIBIDI_SOURCE})
diff -urBbN fribidi-1.0.10-orig/config.h.cmake fribidi-1.0.10/config.h.cmake
--- fribidi-1.0.10-orig/config.h.cmake	1970-01-01 04:00:00.000000000 +0400
+++ fribidi-1.0.10/config.h.cmake	2021-01-25 01:22:03.514284371 +0400
@@ -0,0 +1,100 @@
+/* config.h.cmake.  Generated from CMakeLists.txt by cmake.  */
+
+/* Define to 1 if you want to include debug code in the library */
+#undef DEBUG
+
+/* Don not build deprecated functionality */
+#cmakedefine FRIBIDI_NO_DEPRECATED
+
+/* Define to 1 if you have the <asm/page.h> header file. */
+#cmakedefine01 HAVE_ASM_PAGE_H
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#cmakedefine01 HAVE_DLFCN_H
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#cmakedefine01 HAVE_INTTYPES_H
+
+/* Define to 1 if you have the `memmove' function. */
+#cmakedefine01 HAVE_MEMMOVE
+
+/* Define to 1 if you have the <memory.h> header file. */
+#cmakedefine01 HAVE_MEMORY_H
+
+/* Define to 1 if you have the `memset' function. */
+#cmakedefine01 HAVE_MEMSET
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#cmakedefine01 HAVE_STDINT_H
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#cmakedefine01 HAVE_STDLIB_H
+
+/* Define to 1 if you have the `strdup' function. */
+#cmakedefine01 HAVE_STRDUP
+
+/* Define to 1 if cpp supports the ANSI # stringizing operator. */
+#cmakedefine01 HAVE_STRINGIZE
+
+/* Define to 1 if you have the <strings.h> header file. */
+#cmakedefine01 HAVE_STRINGS_H
+
+/* Define to 1 if you have the <string.h> header file. */
+#cmakedefine01 HAVE_STRING_H
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#cmakedefine01 HAVE_SYS_STAT_H
+
+/* Define to 1 if you have the <sys/times.h> header file. */
+#cmakedefine01 HAVE_SYS_TIMES_H
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#cmakedefine01 HAVE_SYS_TYPES_H
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#cmakedefine01 HAVE_UNISTD_H
+
+/* Define to 1 if you have the <wchar.h> header file. */
+#cmakedefine01 HAVE_WCHAR_H
+
+/* Define to the sub-directory where libtool stores uninstalled libraries. */
+#undef LT_OBJDIR
+
+/* Define to the address where bug reports for this package should be sent. */
+#cmakedefine PACKAGE_BUGREPORT "@PACKAGE_BUGREPORT@"
+
+/* Define to the full name of this package. */
+#cmakedefine PACKAGE_NAME "@PACKAGE_NAME@"
+
+/* Define to the full name and version of this package. */
+#cmakedefine PACKAGE_STRING "PACKAGE_STRING"
+
+/* Define to the one symbol short name of this package. */
+#cmakedefine PACKAGE_TARNAME "@PACKAGE_TARNAME@"
+
+/* Define to the home page for this package. */
+#cmakedefine PACKAGE_URL "@PACKAGE_URL@"
+
+/* Define to the version of this package. */
+#cmakedefine PACKAGE_VERSION "@PACKAGE_VERSION@"
+
+/* Define as the return type of signal handlers (`int' or `void'). */
+#define RETSIGTYPE void
+
+/* The size of `int', as computed by sizeof. */
+#cmakedefine SIZEOF_INT @SIZEOF_INT@
+
+/* The size of `short', as computed by sizeof. */
+#cmakedefine SIZEOF_SHORT @SIZEOF_SHORT@
+
+/* The size of `void *', as computed by sizeof. */
+#cmakedefine SIZEOF_VOID_P @SIZEOF_VOID_P@
+
+/* The size of `wchar_t', as computed by sizeof. */
+#cmakedefine SIZEOF_WCHAR_T @SIZEOF_WCHAR_T@
+
+/* Define to 1 if you have the ANSI C header files. */
+#cmakedefine STDC_HEADERS
+
+/* Define to empty if `const' does not conform to ANSI C. */
+#undef const
diff -urBbN fribidi-1.0.10-orig/fribidi-config.h.cmake fribidi-1.0.10/fribidi-config.h.cmake
--- fribidi-1.0.10-orig/fribidi-config.h.cmake	1970-01-01 04:00:00.000000000 +0400
+++ fribidi-1.0.10/fribidi-config.h.cmake	2021-01-25 01:22:29.427193138 +0400
@@ -0,0 +1,23 @@
+/* lib/fribidi-config.h */
+/* Not copyrighted, in public domain. */
+#ifndef FRIBIDI_CONFIG_H
+#define FRIBIDI_CONFIG_H
+
+#define FRIBIDI "@CMAKE_PROJECT_NAME@"
+#define FRIBIDI_NAME "@PACKAGE_NAME@"
+#define FRIBIDI_BUGREPORT "@PACKAGE_BUGREPORT@"
+
+#define FRIBIDI_VERSION "@FRIBIDI_VERSION@"
+#define FRIBIDI_MAJOR_VERSION @FRIBIDI_MAJOR_VERSION@
+#define FRIBIDI_MINOR_VERSION @FRIBIDI_MINOR_VERSION@
+#define FRIBIDI_MICRO_VERSION @FRIBIDI_MICRO_VERSION@
+#define FRIBIDI_INTERFACE_VERSION @FRIBIDI_INTERFACE_VERSION@
+#define FRIBIDI_INTERFACE_VERSION_STRING "@FRIBIDI_INTERFACE_VERSION@"
+
+/* The size of a `int', as computed by sizeof. */
+#define FRIBIDI_SIZEOF_INT @SIZEOF_INT@
+
+/* Define if fribidi was built with MSVC */
+#cmakedefine FRIBIDI_BUILT_WITH_MSVC
+
+#endif /* FRIBIDI_CONFIG_H */
